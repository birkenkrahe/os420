#+PROPERTY: header-args:bash :results output
* Revising shell commands

  * [ ] Create ~fruit.txt~ with the words ~banana~, ~apple~ and ~carrot~ each
    on one line.

    #+begin_src bash :results output
      echo banana > fruits.txt
      echo apple >> fruits.txt
      echo carrot >> fruits.txt
      cat fruits.txt
    #+end_src

    #+RESULTS:
    : banana
    : apple
    : carrot

  * [ ] Run ~grep 'a'~ on ~fruits.txt~

    #+begin_src bash :results output
      grep 'a' fruits.txt
    #+end_src

    #+RESULTS:
    : banana
    : apple
    : carrot

  * [ ] Regular expressions: square parentheses are a matching set,
    and ~^~ inverts the set. This looks for any line with a ~p~ or a ~c~ in
    it.

    #+begin_src bash :results output
      grep '[pc]' fruits.txt
    #+end_src

    #+RESULTS:
    : apple
    : carrot

  * [ ] ~grep -v~ inverts the search, too, and looks for anything that
    does not have the search pattern characters in it.

    #+begin_src bash :results output
      grep -v '[pc]' fruits.txt
    #+end_src

    #+RESULTS:
    : banana

  * [ ] ~sort uniq -c~ will sort the input alphabetically and then count
    distinct entries. ~new_fruits.txt~ has more lines in it, but still
    the three words.

    In the command, ~sort~ is important because ~uniq~ can only run on
    adjacent entries. ~new_fruits_sorted.txt~ is teed off after ~sort~ to
    confirm this.

    #+begin_src bash
      cat new_fruits.txt | sort | tee new_fruits_sorted.txt | uniq -c | head -n 3
    #+end_src

    #+RESULTS:
    :       6 apple
    :       5 banana
    :       6 carrot

  * [ ] ~egrep~ is the same as ~grep -E~ and amounts to an OR operator
    between different patterns. That is, ~egrep 'p|q'~ checks if either
    ~p~ or ~q~ are found.

    #+name: egrep
    #+begin_src bash
      cat new_fruits.txt | egrep 'na|ca' | wc -l
    #+end_src

    #+RESULTS:
    : 11

* Your first bash script

  * [ ] Create a bash file ~fruit.sh~ that executes the code in
    [[egrep]]. Print it first, then run it using the code block below.

    #+begin_src bash
      cat fruit.sh 
      . fruit.sh
    #+end_src

  * [ ] 
